// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/service/shortener.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/service/shortener.go -destination=internal/app/mock/shortener.go -package=mock URLShortener
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLShortener is a mock of URLShortener interface.
type MockURLShortener struct {
	ctrl     *gomock.Controller
	recorder *MockURLShortenerMockRecorder
	isgomock struct{}
}

// MockURLShortenerMockRecorder is the mock recorder for MockURLShortener.
type MockURLShortenerMockRecorder struct {
	mock *MockURLShortener
}

// NewMockURLShortener creates a new mock instance.
func NewMockURLShortener(ctrl *gomock.Controller) *MockURLShortener {
	mock := &MockURLShortener{ctrl: ctrl}
	mock.recorder = &MockURLShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLShortener) EXPECT() *MockURLShortenerMockRecorder {
	return m.recorder
}

// GetOriginalURL mocks base method.
func (m *MockURLShortener) GetOriginalURL(shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalURL", shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalURL indicates an expected call of GetOriginalURL.
func (mr *MockURLShortenerMockRecorder) GetOriginalURL(shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalURL", reflect.TypeOf((*MockURLShortener)(nil).GetOriginalURL), shortURL)
}

// ShortenURL mocks base method.
func (m *MockURLShortener) ShortenURL(longURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", longURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockURLShortenerMockRecorder) ShortenURL(longURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockURLShortener)(nil).ShortenURL), longURL)
}
