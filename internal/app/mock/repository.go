// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/repository/repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/repository/repository.go -destination=internal/app/mock/repository.go -package=mock URLRepository
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLRepository is a mock of URLRepository interface.
type MockURLRepository struct {
	ctrl     *gomock.Controller
	recorder *MockURLRepositoryMockRecorder
	isgomock struct{}
}

// MockURLRepositoryMockRecorder is the mock recorder for MockURLRepository.
type MockURLRepositoryMockRecorder struct {
	mock *MockURLRepository
}

// NewMockURLRepository creates a new mock instance.
func NewMockURLRepository(ctrl *gomock.Controller) *MockURLRepository {
	mock := &MockURLRepository{ctrl: ctrl}
	mock.recorder = &MockURLRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLRepository) EXPECT() *MockURLRepositoryMockRecorder {
	return m.recorder
}

// AddURL mocks base method.
func (m *MockURLRepository) AddURL(shortURL, longURL string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddURL", shortURL, longURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddURL indicates an expected call of AddURL.
func (mr *MockURLRepositoryMockRecorder) AddURL(shortURL, longURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddURL", reflect.TypeOf((*MockURLRepository)(nil).AddURL), shortURL, longURL)
}

// DelURL mocks base method.
func (m *MockURLRepository) DelURL(shortURL string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DelURL", shortURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// DelURL indicates an expected call of DelURL.
func (mr *MockURLRepositoryMockRecorder) DelURL(shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DelURL", reflect.TypeOf((*MockURLRepository)(nil).DelURL), shortURL)
}

// GetURL mocks base method.
func (m *MockURLRepository) GetURL(shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockURLRepositoryMockRecorder) GetURL(shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockURLRepository)(nil).GetURL), shortURL)
}
