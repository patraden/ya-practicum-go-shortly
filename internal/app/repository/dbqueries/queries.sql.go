// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package sql

import (
	"context"
	"time"

	domain "github.com/patraden/ya-practicum-go-shortly/internal/app/domain"
)

const AddURLMapping = `-- name: AddURLMapping :exec
INSERT INTO shortener.urlmapping (slug, original, created_at, expires_at)
VALUES ($1, $2, $3, $4)
`

type AddURLMappingParams struct {
	Slug      domain.Slug        `db:"slug"`
	Original  domain.OriginalURL `db:"original"`
	CreatedAt time.Time          `db:"created_at"`
	ExpiresAt time.Time          `db:"expires_at"`
}

func (q *Queries) AddURLMapping(ctx context.Context, arg AddURLMappingParams) error {
	_, err := q.db.Exec(ctx, AddURLMapping,
		arg.Slug,
		arg.Original,
		arg.CreatedAt,
		arg.ExpiresAt,
	)
	return err
}

type AddURLMappingBatchCopyParams struct {
	Slug      domain.Slug        `db:"slug"`
	Original  domain.OriginalURL `db:"original"`
	CreatedAt time.Time          `db:"created_at"`
	ExpiresAt time.Time          `db:"expires_at"`
}

const GetURLMapping = `-- name: GetURLMapping :one
SELECT slug, original, created_at, expires_at
FROM shortener.urlmapping
WHERE slug = $1
`

func (q *Queries) GetURLMapping(ctx context.Context, slug domain.Slug) (ShortenerUrlmapping, error) {
	row := q.db.QueryRow(ctx, GetURLMapping, slug)
	var i ShortenerUrlmapping
	err := row.Scan(
		&i.Slug,
		&i.Original,
		&i.CreatedAt,
		&i.ExpiresAt,
	)
	return i, err
}
